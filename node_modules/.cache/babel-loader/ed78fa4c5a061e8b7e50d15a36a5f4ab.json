{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport componentList from '@/components/register/component-list';\nimport draggable from 'vuedraggable';\nexport default {\n  name: 'ComponentPane',\n  components: {\n    draggable\n  },\n  data() {\n    return {\n      cptItemSpan: 12,\n      searchCptResult: [],\n      show: false,\n      searchKeys: '',\n      // 当前激活的 tab 面板\n      activeTab: 'component',\n      // 激活组件分组面板数组\n      activeCptGroupNames: [],\n      componentList,\n      cptGroupKeys: [],\n      // 图层是否可拖拽\n      isLayerDraggable: true\n    };\n  },\n  computed: {\n    // 历史使用组件记录\n    historyUsedCpts() {\n      return this.$store.state.bigScreen.historyUsedCpts;\n    },\n    // 图层列表\n    layerList() {\n      return this.$store.state.bigScreen.componentList;\n    }\n  },\n  watch: {\n    // todo 搜索组件功能及样式待优化\n    searchKeys(newVal, oldVal) {\n      if (newVal === '') {\n        this.searchCptResult = [];\n      } else {\n        componentList.forEach(group => {\n          group.children.forEach(_c => {\n            if (_c.name.includes(newVal)) {\n              this.searchCptResult.push(_c);\n            }\n          });\n        });\n      }\n    }\n  },\n  methods: {\n    changeColSpan(span) {\n      this.cptItemSpan = span;\n    },\n    changeCptVisible(cpt) {\n      const {\n        id,\n        hidden\n      } = cpt;\n      const params = {\n        id,\n        data: {\n          hidden: !hidden\n        }\n      };\n      this.$store.dispatch('bigScreen/updateCptProp', params);\n    },\n    // 切换左侧tab：组件/图层\n    changeTab() {},\n    // 折叠面板改变触发，即切换组件分组\n    changeCollapse() {},\n    isActiveLayer(index) {\n      return this.$store.state.bigScreen.curComponentIndex === index;\n    },\n    dragStart(e) {\n      const copyDom = e.currentTarget.cloneNode(true);\n      this.$emit('dragStart', copyDom);\n    },\n    selectLayer(e, item, index) {\n      this.$emit('showConfigPane', e, item, index);\n    },\n    copyCpt(item) {\n      this.$emit('copyCpt', item);\n    },\n    delCpt(item, index) {\n      this.$emit('delCpt', item, index);\n    },\n    // 开始移动图层\n    startMoveLayer(event) {},\n    // 结束移动图层\n    endMoveLayer() {}\n  }\n};","map":null,"metadata":{},"sourceType":"module"}