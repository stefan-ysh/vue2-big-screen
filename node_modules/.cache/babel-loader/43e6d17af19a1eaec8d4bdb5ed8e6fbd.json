{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('el-dialog', {\n    staticClass: \"code-editor-dialog\",\n    attrs: {\n      \"visible\": true,\n      \"title\": \"代码编辑\"\n    }\n  }, [_c('editor', {\n    ref: \"bigScreenCodeEditor\",\n    staticClass: \"code-editor\",\n    attrs: {\n      \"lang\": _vm.language,\n      \"theme\": \"monokai\",\n      \"options\": _vm.options\n    },\n    on: {\n      \"init\": _vm.editorInit\n    },\n    model: {\n      value: _vm.currentCpt.configProps.cptDataForm[_vm.field],\n      callback: function ($$v) {\n        _vm.$set(_vm.currentCpt.configProps.cptDataForm, _vm.field, $$v);\n      },\n      expression: \"currentCpt.configProps.cptDataForm[field]\"\n    }\n  }), _c('div', {\n    attrs: {\n      \"slot\": \"footer\"\n    },\n    slot: \"footer\"\n  }, [_c('el-button', {\n    on: {\n      \"click\": _vm.cancel\n    }\n  }, [_vm._v(\"取消\")]), _c('el-button', {\n    on: {\n      \"click\": _vm.confirm\n    }\n  }, [_vm._v(\"确认\")])], 1)], 1);\n};\nvar staticRenderFns = [];\nexport { render, staticRenderFns };","map":null,"metadata":{},"sourceType":"module"}