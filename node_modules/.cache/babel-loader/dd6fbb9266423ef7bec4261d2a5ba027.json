{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// 大屏设计器状态存储\nconst designState = {\n  // 大屏总数据\n  bigScreenData: {\n    id: '',\n    title: '你的大屏',\n    screenWidth: 1920,\n    screenHeight: 1080,\n    bgColor: '#1d1e1f',\n    description: '',\n    bgImg: '',\n    isPublic: true,\n    password: '',\n    components: []\n  },\n  // 窗口宽度\n  windowWidth: 0,\n  // 窗口高度\n  windowHeight: 0,\n  // 画布容器\n  webContainer: undefined,\n  // 容器缩放比例\n  containerScale: 1,\n  // 已经添加到画布中的组件列表\n  componentList: [],\n  // 常用组件列表\n  historyUsedCpts: [],\n  // 当前选中的组件\n  curComponent: {\n    cptOption: undefined\n  },\n  // 当前选中组件的下标\n  curComponentIndex: -1,\n  // 画布背景风格 分为点阵和网格 lattice / grid\n  canvasBgStyle: 'lattice',\n  // 是否显示标尺\n  isShowRuler: true,\n  // 是否显示组件面板\n  componentPaneWidth: 200,\n  // 是否显示配置面板\n  configPaneWidth: 300,\n  // 是否显示组件坐标\n  isShowCoord: false\n};\nconst designActions = {\n  /** 大屏总数据操作 */\n  // 初始化大屏数据\n  initBigScreenData({\n    commit\n  }, data) {\n    commit('INIT_BIG_SCREEN_DATA', data);\n  },\n  setBigScreenData({\n    commit\n  }, params) {\n    commit('SET_BIG_SCREEN_DATA', params);\n  },\n  /** 设置画布样式等 */\n  // 设置显示坐标 or not\n  setCoordShowStatus({\n    commit,\n    state,\n    dispatch\n  }, data) {\n    commit('SET_COORD_SHOW_STATUS', data);\n  },\n  // 设置显示标尺 or not\n  setRuleShowStatus({\n    commit,\n    state,\n    dispatch\n  }, data) {\n    commit('SET_RULE_SHOW_STATUS', data);\n  },\n  // 更改画布背景风格\n  changeCanvasBgStyle({\n    commit,\n    state,\n    dispatch\n  }, style) {\n    state.canvasBgStyle = style;\n  },\n  // 切换组件及属性设置面板显示状态\n  changePaneDisplayStatus({\n    commit,\n    state,\n    dispatch\n  }, type) {\n    if (type === 'left') {\n      state.componentPaneWidth = state.componentPaneWidth === 0 ? 200 : 0;\n    } else {\n      state.configPaneWidth = state.configPaneWidth === 0 ? 300 : 0;\n    }\n    dispatch('initContainerSize');\n  },\n  // 画布容器，目前 用于截图\n  setContainer({\n    state\n  }, elRef) {\n    state.webContainer = elRef;\n  },\n  // 更改容器缩放比例\n  changeScale({\n    state\n  }, val) {\n    state.containerScale = val;\n  },\n  // 初始化容器缩放比例\n  initContainerSize({\n    state,\n    dispatch\n  }) {\n    state.windowWidth = document.documentElement.clientWidth;\n    state.windowHeight = document.documentElement.clientHeight;\n    const tempWidth = state.windowWidth - state.componentPaneWidth - state.configPaneWidth - 45;\n    const tempHeight = state.windowHeight - 65;\n    const screenX = (tempWidth / state.bigScreenData.screenWidth).toFixed(2) * 1;\n    const screenY = (tempHeight / state.bigScreenData.screenHeight).toFixed(2) * 1;\n    const minScale = Math.min(screenX, screenY);\n    // 设置缩放最小值，避免缩放过小页面卡死\n    state.containerScale = minScale <= 0.02 ? 0.02 : minScale;\n  },\n  // /** 画布组件操作 */\n  // 当前组件下标\n  setCurComponentIndex({\n    commit\n  }, index) {\n    commit('SET_CUR_COMPONENT_INDEX', index);\n  },\n  // 初始化组件列表\n  initComponentList({\n    commit\n  }, cpts) {\n    commit('INIT_COMPONENT_LIST', cpts);\n  },\n  // 复制组件\n  addCpt({\n    commit\n  }, cpt) {\n    commit('ADD_CPT', cpt);\n  },\n  // 删除画布中的组件\n  delCpt({\n    commit\n  }, index) {\n    commit('DEL_CPT', index);\n  },\n  // 清空画布\n  clearCanvas({\n    commit\n  }) {\n    commit('CLEAR_CANVAS');\n  },\n  // 设置当前选中的组件\n  setCurComponent({\n    commit\n  }, cpt) {\n    commit('SET_CUR_COMPONENT', cpt);\n  },\n  // 更新组件信息, params 包含两个值\n  // 一个是 id\n  // 一个是需要修改的属性键值对 data: { key: value }\n  // 如：要更改 id 为 1 的组件的可见度，则需要传值为 this.$store.dispatch('bigScreen/updateCptProp', { id: 1, data: { hidden: true } })\n  updateCptProp({\n    commit\n  }, params) {\n    commit('UPDATE_CPT_PROP', params);\n  }\n};\nconst designMutations = {\n  INIT_BIG_SCREEN_DATA(state, data) {\n    state.bigScreenData = data;\n  },\n  SET_BIG_SCREEN_DATA(state, params) {\n    state.bigScreenData = Object.assign(state.bigScreenData, params);\n  },\n  INIT_COMPONENT_LIST(state, cpts) {\n    state.componentList = cpts;\n  },\n  INIT_FREQUENTLY_USED_COMPONENTS(state) {\n    const cpts = localStorage.getItem('frequentlyUsedCpts');\n    state.historyUsedCpts = JSON.parse(cpts) || [];\n  },\n  ADD_HISTORY_USED_CPT(state, cpt) {\n    const idx = state.historyUsedCpts.findIndex(_f => {\n      return _f.name === cpt.name;\n    });\n    if (idx > -1) {\n      state.historyUsedCpts[idx].num += 1;\n    } else {\n      const tempVal = JSON.parse(JSON.stringify(cpt));\n      tempVal.num = 1;\n      state.historyUsedCpts.push(tempVal);\n    }\n    state.historyUsedCpts.sort(function (a, b) {\n      return b['num'] - a['num'];\n    });\n    const cpts = JSON.stringify(state.historyUsedCpts);\n    localStorage.setItem('frequentlyUsedCpts', cpts);\n  },\n  ADD_CPT(state, cpt) {\n    state.componentList.push(cpt);\n  },\n  DEL_CPT(state, index) {\n    const id = state.componentList[index].id;\n    state.componentList.splice(index, 1);\n    // 从全局组件引用中删除对应引用\n    this.commit('bigScreen/DEL_BIG_SCREEN_CPT_REF', id);\n  },\n  CLEAR_CANVAS(state) {\n    state.componentList = [];\n  },\n  SET_COORD_SHOW_STATUS(state, data) {\n    state.isShowCoord = data;\n  },\n  SET_RULE_SHOW_STATUS(state, data) {\n    state.isShowRuler = data;\n  },\n  SET_CUR_COMPONENT(state, cpt) {\n    // 图层滚动至图层容器中心可视区\n    const el = document.querySelector('#layer' + cpt.id);\n    setTimeout(() => {\n      el && el.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      });\n    }, 0);\n    state.curComponent = cpt;\n  },\n  SET_CUR_COMPONENT_INDEX(state, index) {\n    state.curComponentIndex = index;\n  },\n  UPDATE_CPT_PROP(state, params) {\n    const {\n      id,\n      data\n    } = params;\n    if (id === state.curComponent.id) {\n      state.curComponent = Object.assign(state.curComponent, data);\n    } else {\n      let targetComponent = state.componentList.find(_c => {\n        return _c.id === id;\n      });\n      const tempVal = Object.assign(targetComponent, data);\n      targetComponent = tempVal;\n    }\n  }\n};\nconst designGetters = {\n  // 画布背景 分为点阵和网格 lattice / grid\n  designAreaStyle(state) {\n    if (state.canvasBgStyle === 'lattice') {\n      return {\n        'background-color': '#18181c',\n        height: state.windowHeight - 45 + 'px',\n        display: 'flex',\n        'background-image': `linear-gradient(#18181c 14px,transparent 0),linear-gradient(90deg,transparent 14px,#86909c 0)`,\n        'background-size': `15px 15px`\n      };\n    } else {\n      // 竖线  竖线背景 横线 横线背景\n      return {\n        height: state.windowHeight - 45 + 'px',\n        display: 'flex',\n        background: 'linear-gradient(-90deg, #545d63 1px, transparent 0px) 0px 0px / 20px 20px, linear-gradient(0deg, #545d63 1px, #18181c 0px) 0px 0px / 20px 20px'\n      };\n    }\n  }\n};\nexport { designState, designActions, designMutations, designGetters };","map":{"version":3,"names":["designState","bigScreenData","id","title","screenWidth","screenHeight","bgColor","description","bgImg","isPublic","password","components","windowWidth","windowHeight","webContainer","undefined","containerScale","componentList","historyUsedCpts","curComponent","cptOption","curComponentIndex","canvasBgStyle","isShowRuler","componentPaneWidth","configPaneWidth","isShowCoord","designActions","initBigScreenData","commit","data","setBigScreenData","params","setCoordShowStatus","state","dispatch","setRuleShowStatus","changeCanvasBgStyle","style","changePaneDisplayStatus","type","setContainer","elRef","changeScale","val","initContainerSize","document","documentElement","clientWidth","clientHeight","tempWidth","tempHeight","screenX","toFixed","screenY","minScale","Math","min","setCurComponentIndex","index","initComponentList","cpts","addCpt","cpt","delCpt","clearCanvas","setCurComponent","updateCptProp","designMutations","INIT_BIG_SCREEN_DATA","SET_BIG_SCREEN_DATA","Object","assign","INIT_COMPONENT_LIST","INIT_FREQUENTLY_USED_COMPONENTS","localStorage","getItem","JSON","parse","ADD_HISTORY_USED_CPT","idx","findIndex","_f","name","num","tempVal","stringify","push","sort","a","b","setItem","ADD_CPT","DEL_CPT","splice","CLEAR_CANVAS","SET_COORD_SHOW_STATUS","SET_RULE_SHOW_STATUS","SET_CUR_COMPONENT","el","querySelector","setTimeout","scrollIntoView","behavior","block","SET_CUR_COMPONENT_INDEX","UPDATE_CPT_PROP","targetComponent","find","_c","designGetters","designAreaStyle","height","display","background"],"sources":["/Users/ysh/Documents/GitHub/vue2-big-screen/src/store/modules/big-screen/design.js"],"sourcesContent":["// 大屏设计器状态存储\nconst designState = {\n  // 大屏总数据\n  bigScreenData: {\n    id: '',\n    title: '你的大屏',\n    screenWidth: 1920,\n    screenHeight: 1080,\n    bgColor: '#1d1e1f',\n    description: '',\n    bgImg: '',\n    isPublic: true,\n    password: '',\n    components: []\n  },\n  // 窗口宽度\n  windowWidth: 0,\n  // 窗口高度\n  windowHeight: 0,\n  // 画布容器\n  webContainer: undefined,\n  // 容器缩放比例\n  containerScale: 1,\n  // 已经添加到画布中的组件列表\n  componentList: [],\n  // 常用组件列表\n  historyUsedCpts: [],\n  // 当前选中的组件\n  curComponent: { cptOption: undefined },\n  // 当前选中组件的下标\n  curComponentIndex: -1,\n  // 画布背景风格 分为点阵和网格 lattice / grid\n  canvasBgStyle: 'lattice',\n  // 是否显示标尺\n  isShowRuler: true,\n  // 是否显示组件面板\n  componentPaneWidth: 200,\n  // 是否显示配置面板\n  configPaneWidth: 300,\n  // 是否显示组件坐标\n  isShowCoord: false\n}\nconst designActions = {\n  /** 大屏总数据操作 */\n  // 初始化大屏数据\n  initBigScreenData({ commit }, data) {\n    commit('INIT_BIG_SCREEN_DATA', data)\n  },\n\n  setBigScreenData({ commit }, params) {\n    commit('SET_BIG_SCREEN_DATA', params)\n  },\n\n  /** 设置画布样式等 */\n  // 设置显示坐标 or not\n  setCoordShowStatus({ commit, state, dispatch }, data) {\n    commit('SET_COORD_SHOW_STATUS', data)\n  },\n  // 设置显示标尺 or not\n  setRuleShowStatus({ commit, state, dispatch }, data) {\n    commit('SET_RULE_SHOW_STATUS', data)\n  },\n  // 更改画布背景风格\n  changeCanvasBgStyle({ commit, state, dispatch }, style) {\n    state.canvasBgStyle = style\n  },\n  // 切换组件及属性设置面板显示状态\n  changePaneDisplayStatus({ commit, state, dispatch }, type) {\n    if (type === 'left') {\n      state.componentPaneWidth = state.componentPaneWidth === 0 ? 200 : 0\n    } else {\n      state.configPaneWidth = state.configPaneWidth === 0 ? 300 : 0\n    }\n    dispatch('initContainerSize')\n  },\n\n  // 画布容器，目前 用于截图\n  setContainer({ state }, elRef) {\n    state.webContainer = elRef\n  },\n\n  // 更改容器缩放比例\n  changeScale({ state }, val) {\n    state.containerScale = val\n  },\n\n  // 初始化容器缩放比例\n  initContainerSize({ state, dispatch }) {\n    state.windowWidth = document.documentElement.clientWidth\n    state.windowHeight = document.documentElement.clientHeight\n    const tempWidth = state.windowWidth - state.componentPaneWidth - state.configPaneWidth - 45\n    const tempHeight = state.windowHeight - 65\n    const screenX = (tempWidth / state.bigScreenData.screenWidth).toFixed(2) * 1\n    const screenY = (tempHeight / state.bigScreenData.screenHeight).toFixed(2) * 1\n    const minScale = Math.min(screenX, screenY)\n    // 设置缩放最小值，避免缩放过小页面卡死\n    state.containerScale = minScale <= 0.02 ? 0.02 : minScale\n  },\n\n  // /** 画布组件操作 */\n  // 当前组件下标\n  setCurComponentIndex({ commit }, index) {\n    commit('SET_CUR_COMPONENT_INDEX', index)\n  },\n  // 初始化组件列表\n  initComponentList({ commit }, cpts) {\n    commit('INIT_COMPONENT_LIST', cpts)\n  },\n  // 复制组件\n  addCpt({ commit }, cpt) {\n    commit('ADD_CPT', cpt)\n  },\n  // 删除画布中的组件\n  delCpt({ commit }, index) {\n    commit('DEL_CPT', index)\n  },\n  // 清空画布\n  clearCanvas({ commit }) {\n    commit('CLEAR_CANVAS')\n  },\n  // 设置当前选中的组件\n  setCurComponent({ commit }, cpt) {\n    commit('SET_CUR_COMPONENT', cpt)\n  },\n  // 更新组件信息, params 包含两个值\n  // 一个是 id\n  // 一个是需要修改的属性键值对 data: { key: value }\n  // 如：要更改 id 为 1 的组件的可见度，则需要传值为 this.$store.dispatch('bigScreen/updateCptProp', { id: 1, data: { hidden: true } })\n  updateCptProp({ commit }, params) {\n    commit('UPDATE_CPT_PROP', params)\n  }\n}\nconst designMutations = {\n  INIT_BIG_SCREEN_DATA(state, data) {\n    state.bigScreenData = data\n  },\n  SET_BIG_SCREEN_DATA(state, params) {\n    state.bigScreenData = Object.assign(state.bigScreenData, params)\n  },\n  INIT_COMPONENT_LIST(state, cpts) {\n    state.componentList = cpts\n  },\n  INIT_FREQUENTLY_USED_COMPONENTS(state) {\n    const cpts = localStorage.getItem('frequentlyUsedCpts')\n    state.historyUsedCpts = JSON.parse(cpts) || []\n  },\n  ADD_HISTORY_USED_CPT(state, cpt) {\n    const idx = state.historyUsedCpts.findIndex(_f => {\n      return _f.name === cpt.name\n    })\n    if (idx > -1) {\n      state.historyUsedCpts[idx].num += 1\n    } else {\n      const tempVal = JSON.parse(JSON.stringify(cpt))\n      tempVal.num = 1\n      state.historyUsedCpts.push(tempVal)\n    }\n    state.historyUsedCpts.sort(function(a, b) {\n      return b['num'] - a['num']\n    })\n    const cpts = JSON.stringify(state.historyUsedCpts)\n    localStorage.setItem('frequentlyUsedCpts', cpts)\n  },\n  ADD_CPT(state, cpt) {\n    state.componentList.push(cpt)\n  },\n  DEL_CPT(state, index) {\n    const id = state.componentList[index].id\n    state.componentList.splice(index, 1)\n    // 从全局组件引用中删除对应引用\n    this.commit('bigScreen/DEL_BIG_SCREEN_CPT_REF', id)\n  },\n  CLEAR_CANVAS(state) {\n    state.componentList = []\n  },\n  SET_COORD_SHOW_STATUS(state, data) {\n    state.isShowCoord = data\n  },\n  SET_RULE_SHOW_STATUS(state, data) {\n    state.isShowRuler = data\n  },\n  SET_CUR_COMPONENT(state, cpt) {\n    // 图层滚动至图层容器中心可视区\n    const el = document.querySelector('#layer' + cpt.id)\n    setTimeout(() => {\n      el &&\n        el.scrollIntoView({\n          behavior: 'smooth',\n          block: 'center'\n        })\n    }, 0)\n    state.curComponent = cpt\n  },\n  SET_CUR_COMPONENT_INDEX(state, index) {\n    state.curComponentIndex = index\n  },\n  UPDATE_CPT_PROP(state, params) {\n    const { id, data } = params\n    if (id === state.curComponent.id) {\n      state.curComponent = Object.assign(state.curComponent, data)\n    } else {\n      let targetComponent = state.componentList.find(_c => {\n        return _c.id === id\n      })\n      const tempVal = Object.assign(targetComponent, data)\n      targetComponent = tempVal\n    }\n  }\n}\nconst designGetters = {\n  // 画布背景 分为点阵和网格 lattice / grid\n  designAreaStyle(state) {\n    if (state.canvasBgStyle === 'lattice') {\n      return {\n        'background-color': '#18181c',\n        height: state.windowHeight - 45 + 'px',\n        display: 'flex',\n        'background-image': `linear-gradient(#18181c 14px,transparent 0),linear-gradient(90deg,transparent 14px,#86909c 0)`,\n        'background-size': `15px 15px`\n      }\n    } else {\n      // 竖线  竖线背景 横线 横线背景\n      return {\n        height: state.windowHeight - 45 + 'px',\n        display: 'flex',\n        background:\n          'linear-gradient(-90deg, #545d63 1px, transparent 0px) 0px 0px / 20px 20px, linear-gradient(0deg, #545d63 1px, #18181c 0px) 0px 0px / 20px 20px'\n      }\n    }\n  }\n}\n\nexport { designState, designActions, designMutations, designGetters }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}