{"ast":null,"code":"import { getDataJson, pollingRefresh } from '@/utils';\nexport default {\n  name: 'BSelect',\n  props: {\n    cptId: {\n      type: String,\n      default: ''\n    },\n    configProps: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data() {\n    return {\n      cptData: [],\n      uuid: null,\n      defaultValue: ''\n    };\n  },\n  computed: {\n    cptRefs() {\n      return this.$store.state.bigScreen.cptRefs;\n    }\n  },\n  created() {\n    this.uuid = require('uuid').v1();\n    if (this.configProps.attribute.hasDefaultVal) {\n      this.defaultValue = this.configProps.attribute.defaultValue;\n      this.handleSelect(this.defaultValue);\n    }\n    this.refreshCptData();\n  },\n  methods: {\n    refreshCptData() {\n      pollingRefresh(this.uuid, this.configProps.cptDataForm, this.loadData);\n    },\n    loadData() {\n      getDataJson(this.configProps.cptDataForm, this.cptId).then(res => {\n        this.cptData = res;\n        this.handleParams(this.configProps.attribute.paramsList, true);\n      });\n    },\n    changeCptHiddenStatus(id, hidden) {\n      this.$store.dispatch('bigScreen/changeCptHiddenStatus', {\n        id,\n        hidden\n      });\n    },\n    handleSelect(curTab) {\n      if (!this.configProps.attribute.event) {\n        return;\n      }\n      // 传递参数\n      if (this.configProps.attribute.eType === 'params') {\n        this.handleParams(this.configProps.attribute.paramsList);\n      } else {\n        // 组件显隐交互\n        // 只显示与当前 tab 绑定的组件，其他 tab 的组件隐藏\n        this.configProps.attribute.eventList.forEach(_e => {\n          _e.cpt.forEach(cId => {\n            const hidden = curTab !== _e.tab;\n            this.changeCptHiddenStatus(cId, hidden);\n          });\n        });\n      }\n    },\n    handleParams(paramsList, init) {\n      paramsList.forEach(_p => {\n        _p.paramsCpt.forEach(id => {\n          const temVal = {};\n          // 默认选中第一项\n          if (init && this.configProps.attribute.firstItemSelectedByDefault) {\n            this.defaultValue = this.cptData[0].value;\n            if (_p.paramsSource === 'selectItemValue') {\n              temVal[_p.paramsName] = this.cptData[0].value;\n            } else if (_p.paramsSource === 'selectItemLabel') {\n              temVal[_p.paramsName] = this.cptData[0].label;\n            }\n          } else {\n            if (_p.paramsSource === 'selectItemValue') {\n              temVal[_p.paramsName] = this.defaultValue;\n            } else if (_p.paramsSource === 'selectItemLabel') {\n              const v = this.cptData.find(c => {\n                // eslint-disable-next-line eqeqeq\n                return c.value == this.defaultValue;\n              });\n              if (v) temVal[_p.paramsName] = v.label;\n            } else {\n              temVal[_p.paramsName] = _p.paramsVal;\n            }\n          }\n          this.$store.dispatch('bigScreen/changeReqParams', {\n            id,\n            params: temVal\n          });\n          this.$nextTick(() => {\n            if (this.cptRefs.get(id)) {\n              this.cptRefs.get(id).refreshCptData();\n            }\n          });\n        });\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}