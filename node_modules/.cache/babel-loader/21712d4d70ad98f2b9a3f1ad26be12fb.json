{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('div', {\n    staticClass: \"bigscreen-designer\"\n  }, [_c('Toolbar', {\n    attrs: {\n      \"multipleCptPositions\": _vm.multipleCptPositions,\n      \"multipleCpts\": _vm.multipleCpts\n    },\n    on: {\n      \"clearMultipleCpts\": _vm.clearMultipleCpts\n    }\n  }), _c('div', {\n    staticClass: \"design-area\",\n    style: _vm.designAreaStyle,\n    on: {\n      \"click\": function ($event) {\n        if ($event.target !== $event.currentTarget) return null;\n        return _vm.outBlur.apply(null, arguments);\n      }\n    }\n  }, [_c('LeftPaneControlBar'), _c('RightPaneControlBar'), _c('div', {\n    staticClass: \"left-pane\",\n    style: {\n      width: _vm.cptPaneWidth + 'px'\n    }\n  }, [_c('component-pane', {\n    on: {\n      \"setMultipleCpt\": _vm.setMultipleCpt,\n      \"dragStart\": _vm.dragStart,\n      \"showConfigPane\": _vm.showConfigPane,\n      \"copyCpt\": _vm.copyCpt,\n      \"delCpt\": _vm.delCpt\n    }\n  })], 1), _c('div', {\n    staticClass: \"canvas-area\",\n    style: {\n      width: _vm.windowWidth - _vm.cptPaneWidth - _vm.configPaneWidth + 'px',\n      opacity: _vm.bgOpacity\n    },\n    on: {\n      \"click\": function ($event) {\n        if ($event.target !== $event.currentTarget) return null;\n        return _vm.outBlur.apply(null, arguments);\n      }\n    }\n  }, [_c('div', {\n    ref: \"webContainer\",\n    staticClass: \"web-container\",\n    style: {\n      width: _vm.designData.screenWidth + 'px',\n      height: _vm.designData.screenHeight + 'px',\n      backgroundColor: _vm.designData.bgColor,\n      backgroundImage: _vm.designData.bgImg ? 'url(' + _vm.designData.bgImg + ')' : 'none',\n      transform: 'scale(' + _vm.containerScale + ')',\n      transition: 'transform .5s',\n      margin: '20px 0 0 20px'\n    },\n    on: {\n      \"dragover\": _vm.dropOver,\n      \"drop\": _vm.handleDrop,\n      \"click\": function ($event) {\n        if ($event.target !== $event.currentTarget) return null;\n        return _vm.outBlur.apply(null, arguments);\n      }\n    }\n  }, [_vm.cacheComponents.length > 0 ? _vm._l(_vm.cacheComponents, function (item, index) {\n    return _c('div', {\n      key: item.id,\n      ref: 'div' + item.componentName + index,\n      refInFor: true,\n      staticClass: \"cpt-div\",\n      style: _vm.commonCptStyle(item, index),\n      attrs: {\n        \"tabindex\": \"0\"\n      },\n      on: {\n        \"mousedown\": function ($event) {\n          return _vm.showConfigPane($event, item, index);\n        },\n        \"contextmenu\": function ($event) {\n          $event.preventDefault();\n          return _vm.handleContextMenu.apply(null, arguments);\n        }\n      }\n    }, [_vm.isShowCoord ? _c('div', {\n      staticClass: \"cpt-coordinate\"\n    }, [_vm._v(\"(\" + _vm._s(item.cptX) + \", \" + _vm._s(item.cptY) + \")\")]) : _vm._e(), _c('div', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: _vm.currentCptIndex === index,\n        expression: \"currentCptIndex === index\"\n      }],\n      staticClass: \"x-auxiliary-line\"\n    }), _c('div', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: _vm.currentCptIndex === index,\n        expression: \"currentCptIndex === index\"\n      }],\n      staticClass: \"y-auxiliary-line\"\n    }), _c('div', {\n      directives: [{\n        name: \"resize\",\n        rawName: \"v-resize\",\n        value: 'move',\n        expression: \"'move'\"\n      }],\n      staticClass: \"active-mask\",\n      style: _vm.multipleCpts[item.id] ? {\n        border: '1px solid #B6BFCE'\n      } : {},\n      attrs: {\n        \"data-index\": index\n      }\n    }), _c('div', {\n      staticClass: \"cpt-wrap\"\n    }, [_c(item.componentName, {\n      ref: item.id,\n      refInFor: true,\n      tag: \"component\",\n      class: _vm.convertAnimation(item.configProps.animation),\n      style: _vm.commonCptStyle(item, index, 'rotate'),\n      attrs: {\n        \"cptId\": item.id,\n        \"width\": Math.round(item.cptWidth),\n        \"height\": Math.round(item.cptHeight),\n        \"configProps\": item.configProps\n      }\n    })], 1), _vm._l(_vm.resizeBars, function (it, i) {\n      return _c('div', {\n        directives: [{\n          name: \"show\",\n          rawName: \"v-show\",\n          value: _vm.currentCptIndex === index,\n          expression: \"currentCptIndex === index\"\n        }, {\n          name: \"resize\",\n          rawName: \"v-resize\",\n          value: it.direction,\n          expression: \"it.direction\"\n        }],\n        key: i,\n        staticClass: \"resize-bar\",\n        style: it.style\n      });\n    })], 2);\n  }) : _c('div', {\n    staticClass: \"no-cpt-placeholder\"\n  }, [_c('BSvgIcon', {\n    staticClass: \"no-cpt-tip-img\",\n    attrs: {\n      \"icon-class\": \"building\"\n    }\n  }), _c('span', {\n    staticClass: \"no-cpt-tips\"\n  }, [_vm._v(\" 暂无组件，请从左侧组件面板拖入进行设计 \")])], 1)], 2)]), _c('div', {\n    staticClass: \"right-prop-pane\",\n    style: {\n      width: _vm.configPaneWidth + 'px'\n    }\n  }, [_c('config-pane', {\n    ref: \"configPane\",\n    attrs: {\n      \"currentCpt\": _vm.currentCpt\n    },\n    on: {\n      \"update:currentCpt\": function ($event) {\n        _vm.currentCpt = $event;\n      },\n      \"update:current-cpt\": function ($event) {\n        _vm.currentCpt = $event;\n      }\n    }\n  })], 1)], 1)], 1);\n};\nvar staticRenderFns = [];\nexport { render, staticRenderFns };","map":null,"metadata":{},"sourceType":"module"}