{"ast":null,"code":"import { getDataJson, pollingRefresh } from '@/utils';\nexport default {\n  name: 'MapGc',\n  props: {\n    cptId: String,\n    width: Number,\n    height: Number,\n    configProps: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data() {\n    return {\n      uuid: '',\n      chartOption: {},\n      chart: undefined,\n      cptData: []\n    };\n  },\n  watch: {\n    'configProps.attribute': {\n      handler(newObj) {\n        this.loadChart(newObj);\n      },\n      deep: true // 深度监听\n    },\n\n    width() {\n      this.chart.resize();\n    },\n    height() {\n      this.chart.resize();\n    }\n  },\n  created() {\n    this.uuid = require('uuid').v1();\n  },\n  mounted() {\n    this.chart = this.$echarts.init(document.getElementById(this.uuid));\n    this.refreshCptData();\n  },\n  methods: {\n    refreshCptData() {\n      pollingRefresh(this.uuid, this.configProps.cptDataForm, this.loadData);\n    },\n    loadData() {\n      getDataJson(this.configProps.cptDataForm, this.cptId).then(res => {\n        this.cptData = res;\n        this.loadChart(this.configProps.attribute);\n      });\n    },\n    loadChart(attribute) {\n      const that = this;\n      that.chartOption = {\n        title: {\n          text: attribute.titleText,\n          subtext: attribute.subtext,\n          left: attribute.titleLeft,\n          top: attribute.titleTop,\n          textStyle: {\n            color: attribute.titleColor,\n            fontSize: attribute.titleFontSize\n          },\n          subtextStyle: {\n            color: attribute.subTitleColor,\n            fontSize: attribute.subTitleFontSize\n          }\n        },\n        tooltip: {\n          formatter: function (e) {\n            // e, t, n\n            return e.seriesName + '<br />' + e.name + '：' + e.value;\n          }\n        },\n        visualMap: {\n          min: 0,\n          max: 100,\n          left: 20,\n          bottom: 20,\n          showLabel: !0,\n          text: ['高', '低'],\n          textStyle: {\n            color: '#ddd'\n          },\n          pieces: [{\n            gt: 100,\n            label: attribute.piecesLabel1,\n            color: attribute.piecesColor1\n          }, {\n            gte: 10,\n            lte: 100,\n            label: attribute.piecesLabel2,\n            color: attribute.piecesColor2\n          }, {\n            gte: 1,\n            lt: 10,\n            label: attribute.piecesLabel3,\n            color: attribute.piecesColor3\n          }, {\n            gt: 0,\n            lt: 1,\n            label: attribute.piecesLabel4,\n            color: attribute.piecesColor4\n          }, {\n            value: 0,\n            label: attribute.piecesLabel5,\n            color: attribute.piecesColor5\n          }],\n          show: !0\n        },\n        geo: {\n          map: attribute.map,\n          roam: attribute.roam,\n          // 允许缩放\n          // scaleLimit: { min: 1, max: 2 },//允许缩放级别\n          zoom: 1.23,\n          label: {\n            show: true,\n            fontSize: attribute.geoLabelSize,\n            color: attribute.geoLabelColor\n          },\n          itemStyle: {\n            borderColor: '#777' // 边界线颜色\n          }\n        },\n\n        series: [{\n          name: attribute.seriesName,\n          type: 'map',\n          geoIndex: 0,\n          data: this.cptData\n        }]\n      };\n      that.chart.setOption(that.chartOption);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}