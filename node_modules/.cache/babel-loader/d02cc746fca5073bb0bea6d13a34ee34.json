{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('div', [_c('el-form', {\n    attrs: {\n      \"label-width\": \"80px\",\n      \"size\": \"mini\"\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": \"自动切换\"\n    }\n  }, [_c('el-switch', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"size\": \"mini\"\n    },\n    model: {\n      value: _vm.attribute.autoplay,\n      callback: function ($$v) {\n        _vm.$set(_vm.attribute, \"autoplay\", $$v);\n      },\n      expression: \"attribute.autoplay\"\n    }\n  })], 1), _c('el-form-item', {\n    attrs: {\n      \"label\": \"开启预览\"\n    }\n  }, [_c('el-switch', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"size\": \"mini\"\n    },\n    model: {\n      value: _vm.attribute.isPreviewable,\n      callback: function ($$v) {\n        _vm.$set(_vm.attribute, \"isPreviewable\", $$v);\n      },\n      expression: \"attribute.isPreviewable\"\n    }\n  })], 1), _c('el-form-item', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.attribute.autoplay,\n      expression: \"attribute.autoplay\"\n    }],\n    attrs: {\n      \"label\": \"切换时间\"\n    }\n  }, [_c('el-input-number', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"size\": \"mini\",\n      \"step\": 500,\n      \"controls-position\": \"right\",\n      \"min\": 1000,\n      \"placeholder\": \"自动切换的时间间隔\"\n    },\n    model: {\n      value: _vm.attribute.interval,\n      callback: function ($$v) {\n        _vm.$set(_vm.attribute, \"interval\", $$v);\n      },\n      expression: \"attribute.interval\"\n    }\n  })], 1), _c('el-form-item', {\n    attrs: {\n      \"label\": \"切换方向\"\n    }\n  }, [_c('el-select', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"size\": \"mini\",\n      \"placeholder\": \"请选择切换方向\",\n      \"popper-class\": \"big-screen-select\"\n    },\n    model: {\n      value: _vm.attribute.direction,\n      callback: function ($$v) {\n        _vm.$set(_vm.attribute, \"direction\", $$v);\n      },\n      expression: \"attribute.direction\"\n    }\n  }, [_c('el-option', {\n    attrs: {\n      \"label\": \"横向\",\n      \"value\": \"horizontal\"\n    }\n  }), _c('el-option', {\n    attrs: {\n      \"label\": \"纵向\",\n      \"value\": \"vertical\"\n    }\n  })], 1)], 1), _c('el-form-item', {\n    attrs: {\n      \"label\": \"切换箭头\"\n    }\n  }, [_c('el-select', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"size\": \"mini\",\n      \"placeholder\": \"请选择切换箭头显示时机\",\n      \"popper-class\": \"big-screen-select\"\n    },\n    model: {\n      value: _vm.attribute.arrow,\n      callback: function ($$v) {\n        _vm.$set(_vm.attribute, \"arrow\", $$v);\n      },\n      expression: \"attribute.arrow\"\n    }\n  }, [_c('el-option', {\n    attrs: {\n      \"label\": \"总是显示\",\n      \"value\": \"always\"\n    }\n  }), _c('el-option', {\n    attrs: {\n      \"label\": \"鼠标悬停显示\",\n      \"value\": \"hover\"\n    }\n  }), _c('el-option', {\n    attrs: {\n      \"label\": \"从不显示\",\n      \"value\": \"never\"\n    }\n  })], 1)], 1), _c('el-form-item', {\n    attrs: {\n      \"label\": \"切换触发\"\n    }\n  }, [_c('el-select', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"size\": \"mini\",\n      \"placeholder\": \"请选择触发切换方式\",\n      \"popper-class\": \"big-screen-select\"\n    },\n    model: {\n      value: _vm.attribute.trigger,\n      callback: function ($$v) {\n        _vm.$set(_vm.attribute, \"trigger\", $$v);\n      },\n      expression: \"attribute.trigger\"\n    }\n  }, [_c('el-option', {\n    attrs: {\n      \"label\": \"鼠标悬停触发\",\n      \"value\": \"hover\"\n    }\n  }), _c('el-option', {\n    attrs: {\n      \"label\": \"鼠标点击触发\",\n      \"value\": \"click\"\n    }\n  })], 1)], 1), _c('el-form-item', {\n    attrs: {\n      \"label\": \"轮播风格\"\n    }\n  }, [_c('el-select', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"size\": \"mini\",\n      \"placeholder\": \"请选择触发切换方式\",\n      \"popper-class\": \"big-screen-select\"\n    },\n    model: {\n      value: _vm.attribute.carouseltype,\n      callback: function ($$v) {\n        _vm.$set(_vm.attribute, \"carouseltype\", $$v);\n      },\n      expression: \"attribute.carouseltype\"\n    }\n  }, [_c('el-option', {\n    attrs: {\n      \"label\": \"默认\",\n      \"value\": \"default\"\n    }\n  }), _c('el-option', {\n    attrs: {\n      \"label\": \"卡片\",\n      \"value\": \"card\"\n    }\n  })], 1)], 1), _c('el-form-item', {\n    attrs: {\n      \"label\": \"图片填充\"\n    }\n  }, [_c('el-select', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"size\": \"mini\",\n      \"placeholder\": \"请选择图片填充方式\",\n      \"popper-class\": \"big-screen-select\"\n    },\n    model: {\n      value: _vm.attribute.fit,\n      callback: function ($$v) {\n        _vm.$set(_vm.attribute, \"fit\", $$v);\n      },\n      expression: \"attribute.fit\"\n    }\n  }, [_c('el-option', {\n    attrs: {\n      \"label\": \"拉伸填充\",\n      \"value\": \"fill\"\n    }\n  }), _c('el-option', {\n    attrs: {\n      \"label\": \"比例缩放\",\n      \"value\": \"contain\"\n    }\n  }), _c('el-option', {\n    attrs: {\n      \"label\": \"封面比例\",\n      \"value\": \"cover\"\n    }\n  }), _c('el-option', {\n    attrs: {\n      \"label\": \"保持比例\",\n      \"value\": \"none\"\n    }\n  })], 1)], 1), _c('el-form-item', {\n    attrs: {\n      \"label\": \"轮播图片\"\n    }\n  }, [_c('el-upload', {\n    attrs: {\n      \"action\": _vm.uploadUrl + '/file/upload?dir=imgPool',\n      \"headers\": _vm.uploadHeaders,\n      \"before-upload\": _vm.beforeBgImgUpload,\n      \"show-file-list\": false,\n      \"on-error\": _vm.handleError,\n      \"list-type\": \"picture\",\n      \"on-success\": _vm.handleAvatarSuccess\n    }\n  }, [_c('el-button', {\n    attrs: {\n      \"size\": \"small\",\n      \"type\": \"primary\"\n    }\n  }, [_vm._v(\"点击上传\")])], 1)], 1), _c('el-row', {\n    attrs: {\n      \"gutter\": 4\n    }\n  }, _vm._l(_vm.attribute.imgUrls, function (item, index) {\n    return _c('el-col', {\n      key: index,\n      staticClass: \"imgBlock\",\n      attrs: {\n        \"span\": 12\n      }\n    }, [_c('el-image', {\n      staticStyle: {\n        \"width\": \"100%\",\n        \"height\": \"100%\"\n      },\n      attrs: {\n        \"src\": item,\n        \"fit\": \"contain\"\n      }\n    }), _c('div', {\n      staticClass: \"dleMask\"\n    }, [_c('div', {\n      staticStyle: {\n        \"width\": \"24px\",\n        \"margin\": \"40px auto\"\n      },\n      on: {\n        \"click\": function ($event) {\n          return _vm.handleRemove(index);\n        }\n      }\n    }, [_c('i', {\n      staticClass: \"el-icon-delete\"\n    })])])], 1);\n  }), 1)], 1)], 1);\n};\nvar staticRenderFns = [];\nexport { render, staticRenderFns };","map":null,"metadata":{},"sourceType":"module"}