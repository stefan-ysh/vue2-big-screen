{"ast":null,"code":"import rightMenu from '@/components/RightMenu';\nconst install = function (Vue) {\n  let oldInstance = null;\n  const RightCxtCtr = Vue.extend(rightMenu);\n  /**\n   * @param options.menu 右键的菜单选项\n   * @param options.event 右键点击事件\n   * @param options.posX 如果不传event对象，则需要指定X坐标\n   * @param options.posY 如果不传event对象，则需要指定Y坐标\n   * @param options.canClickFather 点击父级节点是否也触发事件\n   * @param options.canHoverOut 鼠标是否可以悬浮在ctxmenu之外\n   * @param options.backgroundColor 背景色\n   * @param options.activeColor 弹窗悬浮颜色\n   * @param options.nowBoxWidth 顶级弹窗的宽度\n   */\n  const rightCxtFn = function (options) {\n    return new Promise((resolve, reject) => {\n      const instance = new RightCxtCtr();\n      instance.menu = options.menu;\n      instance.canClickFather = options.canClickFather; // 点击父级节点是否也触发事件\n      instance.canHoverOut = options.canHoverOut; // 鼠标是否可以悬浮在ctxmenu之外\n      instance.backgroundColor = options.backgroundColor || '#fff'; // 弹窗背景色\n      instance.activeColor = options.activeColor || '#f2f2f2'; // 弹窗悬浮颜色\n      // 处理X, Y坐标\n      instance.posX = options.event && options.event.clientX || options.posX || 0;\n      instance.absoluteX = instance.posX;\n      instance.posY = options.event && options.event.clientY || options.posY || 0;\n      instance.nowBoxWidth = options.nowBoxWidth || 200; // 当前节点的宽度，不写则为200\n      instance.needReverse = instance.posX + instance.nowBoxWidth > document.body.clientWidth - 5;\n      if (instance.needReverse) {\n        instance.posX = instance.posX - instance.nowBoxWidth;\n      }\n      oldInstance = instance;\n      instance.topEmitClick = data => {\n        resolve(data);\n      };\n      instance.topEmitCancel = data => {\n        reject(data);\n      };\n      rightCxtFn.destroy();\n      instance.$mount();\n      document.body.appendChild(instance.$el);\n    });\n  };\n  rightCxtFn.destroy = () => {\n    if (oldInstance) {\n      oldInstance.$destroy();\n      if (oldInstance.$el && oldInstance.$el.className) {\n        const oldClassName = `.${oldInstance.$el.className.replace(' ', '.')}`;\n        if (document.querySelectorAll(oldClassName).length) {\n          document.body.removeChild(oldInstance.$el);\n        }\n      }\n      oldInstance = null;\n    }\n  };\n  Vue.prototype.$rightCtx = rightCxtFn;\n};\nexport default {\n  install\n};","map":null,"metadata":{},"sourceType":"module"}