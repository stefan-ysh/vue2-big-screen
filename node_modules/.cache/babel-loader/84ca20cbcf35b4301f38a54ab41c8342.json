{"ast":null,"code":"const sessionCache = {\n  set(key, value) {\n    if (!sessionStorage) {\n      return;\n    }\n    if (key != null && value != null) {\n      sessionStorage.setItem(key, value);\n    }\n  },\n  get(key) {\n    if (!sessionStorage) {\n      return null;\n    }\n    if (key == null) {\n      return null;\n    }\n    return sessionStorage.getItem(key);\n  },\n  setJSON(key, jsonValue) {\n    if (jsonValue != null) {\n      this.set(key, JSON.stringify(jsonValue));\n    }\n  },\n  getJSON(key) {\n    const value = this.get(key);\n    if (value != null) {\n      return JSON.parse(value);\n    }\n  },\n  remove(key) {\n    sessionStorage.removeItem(key);\n  }\n};\nconst localCache = {\n  set(key, value) {\n    if (!localStorage) {\n      return;\n    }\n    if (key != null && value != null) {\n      localStorage.setItem(key, value);\n    }\n  },\n  get(key) {\n    if (!localStorage) {\n      return null;\n    }\n    if (key == null) {\n      return null;\n    }\n    return localStorage.getItem(key);\n  },\n  setJSON(key, jsonValue) {\n    if (jsonValue != null) {\n      this.set(key, JSON.stringify(jsonValue));\n    }\n  },\n  getJSON(key) {\n    const value = this.get(key);\n    if (value != null) {\n      return JSON.parse(value);\n    }\n  },\n  remove(key) {\n    localStorage.removeItem(key);\n  }\n};\nexport default {\n  /**\n   * 会话级缓存\n   */\n  session: sessionCache,\n  /**\n   * 本地缓存\n   */\n  local: localCache\n};","map":null,"metadata":{},"sourceType":"module"}