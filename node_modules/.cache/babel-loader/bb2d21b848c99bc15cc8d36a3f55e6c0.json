{"ast":null,"code":"import { getDataJson, pollingRefresh } from '@/utils';\nexport default {\n  name: 'PercentPond',\n  props: {\n    cptId: {\n      type: String,\n      default: ''\n    },\n    width: Number,\n    height: Number,\n    configProps: Object\n  },\n  data() {\n    return {\n      uuid: null,\n      pondConfig: {},\n      refreshFlagKey: null // 强制刷新视图\n    };\n  },\n\n  watch: {\n    'configProps.attribute': {\n      handler() {\n        this.loadData();\n      },\n      deep: true // 深度监听\n    },\n\n    width() {\n      this.refreshFlagKey = require('uuid').v1();\n    },\n    height() {\n      this.refreshFlagKey = require('uuid').v1();\n    }\n  },\n  created() {\n    this.uuid = require('uuid').v1();\n    this.refreshFlagKey = require('uuid').v1();\n    this.refreshCptData();\n  },\n  methods: {\n    refreshCptData() {\n      pollingRefresh(this.uuid, this.configProps.cptDataForm, this.loadData);\n    },\n    loadData() {\n      getDataJson(this.configProps.cptDataForm, this.cptId).then(res => {\n        const tempConfig = JSON.parse(JSON.stringify(this.configProps.attribute));\n        tempConfig.value = res.value;\n        tempConfig.lineDash = [tempConfig.lineWidth, tempConfig.lineSpace];\n        tempConfig.colors = [tempConfig.color1, tempConfig.color2];\n        this.pondConfig = tempConfig;\n        this.refreshFlagKey = require('uuid').v1(); // 强制刷新视图 报错为dataV组件内部bug\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}