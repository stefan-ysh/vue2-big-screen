{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getDataJson, pollingRefresh } from '@/utils';\nexport default {\n  name: 'ScrollTable',\n  props: {\n    cptId: {\n      type: String,\n      default: ''\n    },\n    width: Number,\n    height: Number,\n    configProps: Object\n  },\n  data() {\n    return {\n      config: {},\n      uuid: null,\n      refreshFlagKey: null\n    };\n  },\n  watch: {\n    'configProps.attribute': {\n      handler() {\n        this.loadData();\n      },\n      deep: true // 深度监听\n    }\n  },\n\n  created() {\n    this.uuid = require('uuid').v1();\n    this.refreshFlagKey = require('uuid').v1();\n    this.refreshCptData();\n  },\n  methods: {\n    refreshCptData() {\n      pollingRefresh(this.uuid, this.configProps.cptDataForm, this.loadData);\n    },\n    loadData() {\n      getDataJson(this.configProps.cptDataForm, this.cptId).then(res => {\n        const temp = JSON.parse(JSON.stringify(this.configProps.attribute));\n        const columns = JSON.parse(temp.columns);\n        temp.header = [];\n        temp.columnWidth = []; // 列宽\n        temp.data = [];\n        temp.waitTime *= 1000;\n        temp.align = [temp.textAlign]; // 对齐方式\n        columns.forEach(item => {\n          temp.header.push(item.title);\n          if (item.width) {\n            temp.columnWidth.push(item.width);\n          }\n        });\n        res.forEach(item => {\n          const row = [];\n          columns.forEach(column => {\n            row.push(item[column.key]);\n          });\n          temp.data.push(row);\n        });\n        !temp.hasHeader && delete temp.header;\n        this.config = temp;\n        this.refreshFlagKey = require('uuid').v1();\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}