{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('div', [_c('el-form', {\n    attrs: {\n      \"label-width\": \"80px\",\n      \"size\": \"mini\"\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": \"事件\"\n    }\n  }, [_c('el-switch', {\n    model: {\n      value: _vm.attribute.event,\n      callback: function ($$v) {\n        _vm.$set(_vm.attribute, \"event\", $$v);\n      },\n      expression: \"attribute.event\"\n    }\n  })], 1), _vm.attribute.event ? _c('el-form-item', {\n    attrs: {\n      \"label\": \"事件类型\"\n    }\n  }, [_c('el-select', {\n    attrs: {\n      \"popper-class\": \"big-screen-select\"\n    },\n    model: {\n      value: _vm.attribute.eType,\n      callback: function ($$v) {\n        _vm.$set(_vm.attribute, \"eType\", $$v);\n      },\n      expression: \"attribute.eType\"\n    }\n  }, [_c('el-option', {\n    attrs: {\n      \"label\": \"跳转\",\n      \"value\": \"url\"\n    }\n  }), _c('el-option', {\n    attrs: {\n      \"label\": \"组件\",\n      \"value\": \"cpt\"\n    }\n  })], 1)], 1) : _vm._e(), _vm.attribute.event && _vm.attribute.eType === 'url' ? _c('el-form-item', [_c('span', {\n    attrs: {\n      \"slot\": \"label\"\n    },\n    slot: \"label\"\n  }, [_vm._v(\" 跳转链接 \"), _c('el-tooltip', {\n    attrs: {\n      \"effect\": \"dark\",\n      \"content\": \"跳转至外部链接请填写完整路径，如：https://www.baidu.com\",\n      \"placement\": \"left\"\n    }\n  }, [_c('i', {\n    staticClass: \"el-icon-warning\"\n  })])], 1), _c('el-input', {\n    attrs: {\n      \"rows\": 3\n    },\n    model: {\n      value: _vm.attribute.url,\n      callback: function ($$v) {\n        _vm.$set(_vm.attribute, \"url\", $$v);\n      },\n      expression: \"attribute.url\"\n    }\n  })], 1) : _vm._e(), _vm.attribute.event && _vm.attribute.eType === 'cpt' ? _c('el-form-item', {\n    staticClass: \"event-wrap\"\n  }, [_c('el-row', {\n    attrs: {\n      \"gutter\": 10\n    }\n  }, [_c('el-col', {\n    attrs: {\n      \"span\": 11\n    }\n  }, [_vm._v(\"交互方式\")]), _c('el-col', {\n    attrs: {\n      \"span\": 11\n    }\n  }, [_vm._v(\"交互组件\")]), _c('el-col', {\n    attrs: {\n      \"span\": 2\n    }\n  })], 1), _vm._l(_vm.attribute.eventList, function (ev, index) {\n    return _c('el-row', {\n      key: index,\n      attrs: {\n        \"gutter\": 10\n      }\n    }, [_c('el-col', {\n      attrs: {\n        \"span\": 11\n      }\n    }, [_c('el-select', {\n      attrs: {\n        \"popper-class\": \"big-screen-select\"\n      },\n      model: {\n        value: ev.eMode,\n        callback: function ($$v) {\n          _vm.$set(ev, \"eMode\", $$v);\n        },\n        expression: \"ev.eMode\"\n      }\n    }, [_c('el-option', {\n      attrs: {\n        \"label\": \"刷新组件\",\n        \"value\": \"refreshCpt\"\n      }\n    }), _c('el-option', {\n      attrs: {\n        \"label\": \"刷新页面\",\n        \"value\": \"refreshCanvas\"\n      }\n    }), _c('el-option', {\n      attrs: {\n        \"label\": \"组件显隐\",\n        \"value\": \"hidden\"\n      }\n    })], 1)], 1), _c('el-col', {\n      attrs: {\n        \"span\": 11\n      }\n    }, [_c('el-select', {\n      style: {\n        visibility: ev.eMode === 'refreshCanvas' ? 'hidden' : ''\n      },\n      attrs: {\n        \"multiple\": \"\",\n        \"popper-class\": \"big-screen-select\"\n      },\n      model: {\n        value: ev.cpt,\n        callback: function ($$v) {\n          _vm.$set(ev, \"cpt\", $$v);\n        },\n        expression: \"ev.cpt\"\n      }\n    }, _vm._l(_vm.componentList, function (cpt) {\n      return _c('el-option', {\n        key: cpt.id,\n        attrs: {\n          \"label\": cpt.layerName,\n          \"value\": cpt.id\n        }\n      });\n    }), 1)], 1), _c('el-col', {\n      attrs: {\n        \"span\": 2\n      }\n    }, [_c('i', {\n      staticClass: \"del-row-btn el-icon-delete\",\n      attrs: {\n        \"title\": \"删除事件\"\n      },\n      on: {\n        \"click\": function ($event) {\n          return _vm.delRow(index);\n        }\n      }\n    })])], 1);\n  }), _c('el-button', {\n    staticClass: \"add-row-btn\",\n    on: {\n      \"click\": _vm.addRow\n    }\n  }, [_vm._v(\"+\")])], 2) : _vm._e(), _c('el-form-item', {\n    attrs: {\n      \"label\": \"背景颜色\"\n    }\n  }, [_c('BColorPicker', {\n    attrs: {\n      \"field\": \"bgColor\",\n      \"data\": _vm.attribute\n    }\n  })], 1), _c('el-form-item', {\n    attrs: {\n      \"label\": \"文字大小\"\n    }\n  }, [_c('el-input-number', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"controls-position\": \"right\"\n    },\n    model: {\n      value: _vm.attribute.fontSize,\n      callback: function ($$v) {\n        _vm.$set(_vm.attribute, \"fontSize\", $$v);\n      },\n      expression: \"attribute.fontSize\"\n    }\n  })], 1), _c('el-form-item', {\n    attrs: {\n      \"label\": \"文本颜色\"\n    }\n  }, [_c('BColorPicker', {\n    attrs: {\n      \"field\": \"textColor\",\n      \"data\": _vm.attribute\n    }\n  })], 1), _c('el-form-item', {\n    attrs: {\n      \"label\": \"按钮圆角\"\n    }\n  }, [_c('el-input-number', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"controls-position\": \"right\",\n      \"min\": 0,\n      \"max\": 500\n    },\n    model: {\n      value: _vm.attribute.radius,\n      callback: function ($$v) {\n        _vm.$set(_vm.attribute, \"radius\", $$v);\n      },\n      expression: \"attribute.radius\"\n    }\n  })], 1)], 1)], 1);\n};\nvar staticRenderFns = [];\nexport { render, staticRenderFns };","map":null,"metadata":{},"sourceType":"module"}