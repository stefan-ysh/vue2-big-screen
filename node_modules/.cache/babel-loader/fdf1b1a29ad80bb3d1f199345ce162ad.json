{"ast":null,"code":"import { getDataJson, pollingRefresh } from '@/utils';\nexport default {\n  name: 'BRadio',\n  props: {\n    cptId: {\n      type: String,\n      default: ''\n    },\n    configProps: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data() {\n    return {\n      cptData: {},\n      radioValue: ''\n    };\n  },\n  computed: {\n    cptRefs() {\n      return this.$store.state.bigScreen.cptRefs;\n    }\n  },\n  created() {\n    if (this.configProps.attribute.defaultValue) {\n      this.radioValue = this.configProps.attribute.defaultValue;\n    }\n    this.refreshCptData();\n    // 执行默认数据事件\n    this.changeRadio(this.configProps.attribute.defaultValue);\n  },\n  methods: {\n    convertGap(direction, gap) {\n      if (direction === 'row') {\n        return {\n          'margin-right': gap + 'px'\n        };\n      } else {\n        return {\n          'margin-top': gap + 'px'\n        };\n      }\n    },\n    // 刷新组件shuju\n    refreshCptData() {\n      pollingRefresh(this.uuid, this.configProps.cptDataForm, this.loadData);\n    },\n    // 加载数据\n    loadData() {\n      getDataJson(this.configProps.cptDataForm, this.cptId).then(res => {\n        this.cptData = res;\n      });\n    },\n    changeCptHiddenStatus(id, hidden) {\n      this.$store.dispatch('bigScreen/changeCptHiddenStatus', {\n        id,\n        hidden\n      });\n    },\n    changeRadio(curTab) {\n      if (!this.configProps.attribute.event) {\n        return;\n      }\n      // 传递参数\n      if (this.configProps.attribute.eType === 'params') {\n        this.handleParams(this.configProps.attribute.paramsList);\n      } else {\n        // 组件显隐交互\n        // 只显示与当前 tab 绑定的组件，其他 tab 的组件隐藏\n        this.configProps.attribute.eventList.forEach(_e => {\n          _e.cpt.forEach(cId => {\n            const hidden = curTab !== _e.tab;\n            this.changeCptHiddenStatus(cId, hidden);\n          });\n        });\n      }\n    },\n    handleParams(paramsList) {\n      paramsList.forEach(_p => {\n        _p.paramsCpt.forEach(id => {\n          const temVal = {};\n          if (_p.paramsSource === 'selectItemValue') {\n            temVal[_p.paramsName] = this.radioValue;\n          } else {\n            temVal[_p.paramsName] = _p.paramsVal;\n          }\n          this.$store.dispatch('bigScreen/changeReqParams', {\n            id,\n            params: temVal\n          });\n          this.$nextTick(() => {\n            if (this.cptRefs.get(id)) {\n              this.cptRefs.get(id).refreshCptData();\n            }\n          });\n        });\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}